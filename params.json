{"name":"SicTools","tagline":"System software and tools for SIC/XE hypothetical computer","body":"# SicTools\r\nTools for SIC/XE hypothetical computer from the Leland Beck's book System Software. Includes:\r\n  * Assembler\r\n  * Simulator\r\n\r\nAssembler supports all instructions and directives described in the book. This includes load/store instructions, arithmetic instructions, jumps etc. And directives START, END, ORG, LTORG, BASE, NOBASE, CSECT, USE, EQU, RESB, RESW, EXTDEF, EXTREF. Some features:\r\n  * immediate addressing, indirect addressing, simple addressing\r\n  * PC-relative addressing, base addressing (BASE and NOBASE directive), indexed addressing\r\n  * standard directives START, END, ORG\r\n  * support for literals, LTORG directive\r\n  * support for EQU expressions, full forward and backward references resolved via the algorithm described in the book\r\n  * support for sections via CSECT directive\r\n  * support for blocks via USE directive\r\n  * assembler syntax is (see command line options) more flexbile and free than original\r\n  * floating-point syntax extensions (FLOT and RESF directives)\r\n  * syntax extension for specifying numbers in binary, octal, decimal and hexadecimal format\r\n  * generates debugging-friendly listing file showing original source and corresponding address and generated code\r\n  * generates log file showing code statistics, list of blocks, list of sections, list of symbols, list of literals, list of relocations\r\n  * and more\r\n\r\nSimulator is user-friendly GUI based application that loads asm or obj files. Features:\r\n  * CPU view of registers and current instructions, shows changed registers in different color, supports changing registers values\r\n  * disassembly view and breakpoints\r\n  * memory view with full edit support in hexadecimal and character mode\r\n  * textual screen support\r\n  * devices 0, 1, 2 are redirected to standard input, output and error\r\n  * detected pseudo HALT instruction (jump on itself)\r\n  * automatic execution with set speed (from 1 Hz to 1 MHz)\r\n  * and more\r\n\r\nSee also [SicDemos](https://github.com/jurem/SicDemos) for several example assembly programms.\r\n\r\nInstallation\r\n------------\r\n\r\nDownload or clone source code and run make.\r\n\r\n    git clone https://github.com/jurem/SicTools.git\r\n    cd SicTools\r\n    make jar\r\n\r\nUsage\r\n-----\r\n\r\nTo run simulator\r\n\r\n    java -jar out/make/sictools.jar\r\n\r\nTo run assembler\r\n\r\n    java -cp out/make/sictools.jar sic.Asm source.asm\r\n\r\nwhere source.asm is the file to be compiled.\r\n\r\nTo get assembler help\r\n\r\n    java -cp out/make/sictools.jar sic.Asm -help\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}